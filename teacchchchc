НАСТАВЛЕНИЯ


Практические задания. 1) Чтобы научиться программировать, нужно программировать. [то же с ML/DL/NN/NLP/AI] 2) Если делать странные вещи, будут странные результаты. [не забываем изучать и применять накопленные человечеством знания]


Python & company: как быстро перейти к практике - 2021
Как быстро перейти от теории к практике?
0. Поставить Linux, если он еще не стоит.

Машинное обучение под Windows - это боль. Конечно, нет неразрешимых проблем, но не будьте сами себе злобным буратино! Обладатели Mac OS также могут столкнуться с трудностями в дальнейшем - хотя эта система имеет гораздо больше общего с Unix-системами (многие утилиты командной строки и системные библиотеки - общие с FreeBSD), есть особенности, из-за которых shell-скрипты, написанные для Linux могут некорректно работать в MacOS/BSD системах (см. примеры https://ponderthebits.com/2017/01/know-your-tools-linux-gnu-vs-mac-bsd-command-line-utilities-grep-strings-sed-and-find/ ). 
Предполагается, что все домашние задания, выданные в рамках курса, могут быть выполнены на локальном компьютере. Для этого достаточно выполнить пункты 1-3 текущей инструкции для своей операционной системы. Однако, в реальных задачах для обучения нейронных сетей так или иначе приходится работать на сервере. Чтобы этот процесс не вызвал многочисленных трудностей в будущем, всем любителям машинного обучения, мы рекомендуем сразу начинать работать из под Linux. Для этого есть несколько вариантов: 

1. Самый правильный вариант - поставить Linux как единственную операционную систему или в мультизагрузку с Windows. При установке большинство дистрибутивов Linux дают возможность сохранить Windows (при старте компьютера вылезает меню с выбором ОС). При установке обязательно нужно создать swap-раздел, куда будут откачиваться данные, не влезающие в физическую оперативную память (машинное обучение потребует много памяти) - современные дистрибутивы делают это при установке автоматически.
2. Загружать компьютер с CD/Flash, на которой установлен Linux. Потребуется дистрибутив, поддерживающий загрузку со сменного носителя. Для старых и маломощных компьютеров может подойти LXLE (http://www.lxle.net). Хорошая утилита для создания загрузочных флешек различного назначения (в т.ч. с дистрибутивами Linux): https://unetbootin.github.io/
3. Если от Windows оторваться не получается совсем - ставьте VirtualBox и пользуйтесь Linux из-под Windows, если мощности компьютера позволяют (но помните, что потребуются еще мощности на обучение нейросетей!). 
1. Поставить Anaconda
Можно отдельно качать интерпретатор Python, устанавливать необходимые библиотеки по одной, вручную решать проблемы с их зависимостями от других библиотек и архитектуры системы. Раньше мы так и делали, и на это могло запросто уйти несколько дней. Теперь есть Anaconda:
https://www.anaconda.com/download/
Выбираем свою операционную систему, желаемую версию Python (настоятельно рекомендуем Python 3.6, домашки выполненные на Python 2 приниматься не будут!). Качаем дистрибутив для вашей системы (большинству подойдет 64-Bit (x86) Installer). Устанавливаем и получаем Python с джентльменским набором уже скомпилированных под вашу архитектуру библиотек, с правильными зависимостями между ними. На все уходит не больше 30 минут.
Быстро научиться ставить новые версии библиотек, создавать окружения  с разными версиями одной библиотеки и т.д. поможет Conda Cheat Sheet):
https://docs.conda.io/projects/conda/en/4.6.0/_downloads/52a95608c49671267e40c689e0bc00ca/conda-cheatsheet.pdf
2. Запустить Jupyter. Вспомнить или начать осваивать Python и компанию (библиотеки).
Смотрите наши туториалы!

Также есть обзорный туториал от Stanford по Jupyter, Python, Numpy, Scipy, Matplotlib: http://cs231n.github.io/python-numpy-tutorial/
Настоятельно рекомендуем начать именно с Jupyter, установленного на локальном компьютере, а не с Google Colab - в нем гораздо удобнее получать документацию по используемым функциям и в целом работать (см. наш видео-туториал). Colab может пригодиться, когда понадобится обучать нейросеть на видеокарте. Но зная Jupyter, вы без проблем сможете использовать Colab.
